{"version":3,"sources":["api/users.ts","api/todos.ts","components/utils/getUserById.ts","components/utils/generateNewld.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","getUserById","usersFromServer","find","user","generalNewId","todos","map","todo","Math","max","UserInfo","className","href","TodoInfo","classNames","TodoList","initialTodos","todosFromServer","App","useState","setTitle","hasTitleIdError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","setTodos","handleReset","action","method","onSubmit","event","preventDefault","trim","prevTodos","onReset","htmlFor","type","placeholder","value","onChange","target","required","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e2ca19b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import usersFromServer from '../../api/users';\nimport { User } from '../Types/User';\n\nexport const getUserById = (id: number) => {\n  return usersFromServer.find((user: User) => user.id === id);\n};\n","import { Todos } from '../Types/Todo';\n\nexport const generalNewId = (todos: Todos): number => {\n  const id = todos.map(todo => todo.id);\n  const maxId = Math.max(...id);\n\n  return maxId + 1;\n};\n","import React from 'react';\nimport { User } from '../Types/User';\nimport './UserInfo.scss';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nimport './TodoInfo.scss';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed = true,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../Types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n      <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n        <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n        <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n          Leanne Graham\n        </a>\n      </article>\n\n      <article data-id=\"2\" className=\"TodoInfo\">\n        <h2 className=\"TodoInfo__title\">\n          quis ut nam facilis et officia qui\n        </h2>\n\n        <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n          Patricia Lebsack\n        </a>\n      </article>\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todos } from './components/Types/Todo';\nimport { getUserById } from './components/utils/getUserById';\nimport { generalNewId } from './components/utils/generateNewld';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nconst initialTodos: Todos = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleIdError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [todos, setTodos] = useState(initialTodos);\n\n  function handleReset() {\n    setTitle('');\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  }\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    setTodos((prevTodos) => [...prevTodos, {\n      id: generalNewId(todosFromServer),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    }]);\n\n    handleReset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        onReset={handleReset}\n      >\n\n        <label htmlFor=\"titleInput\">Title:</label>\n\n        <input\n          type=\"text\"\n          id=\"titleInput\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleIdError\n        && <span className=\"error\">Please enter a title</span>}\n\n        <div>\n          <label htmlFor=\"UserSelect\">User:</label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            required\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}